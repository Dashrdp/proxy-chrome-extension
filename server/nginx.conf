# Nginx configuration for Remote Proxy Manager Server
events {
    worker_connections 1024;
}

http {
    upstream proxy_manager {
        server proxy-manager:5000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    
    # Add real IP configuration
    set_real_ip_from 172.16.0.0/12;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # HTTP server - Let's Encrypt challenges and redirect to HTTPS
    server {
        listen 80;
        server_name proxyconf.api.dashrdp.cloud;
        server_tokens off;

        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name proxyconf.api.dashrdp.cloud;
        server_tokens off;
        
        # Let's Encrypt SSL certificates
        ssl_certificate /etc/letsencrypt/live/proxyconf.api.dashrdp.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/proxyconf.api.dashrdp.cloud/privkey.pem;
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/proxyconf.api.dashrdp.cloud/chain.pem;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # API endpoints - direct access without /api prefix
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://proxy_manager;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, X-API-Key, Authorization" always;
            add_header Access-Control-Max-Age 3600 always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, X-API-Key, Authorization" always;
                add_header Access-Control-Max-Age 3600 always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://proxy_manager/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root location - can serve a simple status page or redirect to API docs
        location = / {
            return 200 '{"status":"ok","service":"Remote Proxy Manager","domain":"proxyconf.api.dashrdp.cloud"}';
            add_header Content-Type application/json;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }
    }
}
